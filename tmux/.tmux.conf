# ~/.tmux.conf

# prefix 
set -g prefix C-a
bind a send-prefix
# basic settings
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'
set -g set-titles on
set -g set-titles-string "#S"
set -s escape-time 0
set -g mouse on
set -g base-index 1
set -g renumber-windows on


set-option -g focus-events on
set-option -w -g wrap-search off
# Add : to the default list (" -_@") of word separators.
set-option -ga word-separators :/


# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "xclip -sel clip -i"
bind-key -T copy-mode-vi 'Enter' send -X copy-pipe "xclip -sel clip -i"
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'C-q' send -X cancel
bind-key -T copy-mode-vi 'q' send -X cancel
# bind-key -T copy-mode-vi 'L' send-keys -X end-of-line
# bind-key -T copy-mode-vi 'H' send-keys -X start-of-line
bind-key -T copy-mode-vi 'C-p' send-keys -X jump-to-backward \"$\"

unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane\;\
    send-keys -X copy-pipe "xclip -sel clip -i" \;\
   send-keys -X clear-selection# Make double and triple click work outside of copy mode (already works inside it with default bindings).

bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"


# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# bindings 
# bind -n C-[ if-shell "$is_vim" "send-keys F2" \; copy-mode
bind -n C-b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "\$"
bind -n C-v if-shell "$is_vim" "send-keys C-v" "copy-mode"
# bind -n C-v send-keys F2 \; copy-mode \; send-keys q \; copy-mode \; send-keys r
bind C-[ copy-mode -u
bind C-x kill-pane
bind u source-file ~/.tmux.conf \; display "Reloaded config"
bind C-r split-window -h -c "#{pane_current_path}"  
bind C-f split-window -c "#{pane_current_path}"
bind C-t new-window -c "#{pane_current_path}"
bind C-n next-window
bind C-p previous-window
bind C-a last-window
bind C-m rotate-window -D
bind C-h select-window -t 1
bind C-j select-window -t 2
bind C-k select-window -t 3
# bind C-l select-window -t 4
bind C-l send-keys 'C-l'
# make scrollup in copy-mode work without prefix, except in vim
unbind-key C-u
# bind -n C-u if-shell "$is_vim" "send-keys C-u" "copy-mode -u \; send-keys r"
# Send the same command to all panes/windows/sessions
bind C-e command-prompt -p "Command:" \
       "run \"tmux list-sessions                  -F '##{session_name}'        | xargs -I SESS \
              tmux list-windows  -t SESS          -F 'SESS:##{window_index}'   | xargs -I SESS_WIN \
              tmux list-panes    -t SESS_WIN      -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
              tmux send-keys     -t SESS_WIN_PANE '%1' Enter\""

# resize panes
bind-key k resize-pane -U 15
bind-key j resize-pane -D 15
bind-key h resize-pane -L 25
bind-key l resize-pane -R 25

# pane border
set -g pane-border-style 'fg=colour236'
set -g pane-active-border-style 'fg=colour236'

# status bar
set -g status-justify left
# set -g status-style 'bg=colour235'
set -g status-style 'bg=colour237'
set -g status-left '[#[bg=colour237,fg=colour139]#S#[bg=colour237,fg=colour245]] ' 
# set -g status-left '#[bg=colour236,fg=colour139]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
# set -g status-right "#[fg=colour245]  %l:%M %p "
# set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge)                                             #(cat #{socket_path}-\#{session_id}-vimbridge-R) #[fg=colour245]  %l:%M %p'
set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge) #(cat #{socket_path}-\#{session_id}-vimbridge-R)#[bg=colour237,fg=colour245]%l:%M %p'
set -g status-interval 60 # Default is 15.
set -g focus-events on
set -g status-left-length 150
set -g status-right-length 150
# set-option -g status-position bottom

# set -w -g window-status-current-style 'bg=colour236,fg=#995977'
set -w -g window-status-current-style 'bg=colour237,fg=#a79883'
set -w -g window-status-current-format "#I:#W*"
set -w -g window-status-style 'fg=colour245'
set -w -g window-status-format "#I:#W"

set -g message-style 'fg=colour245,bg=colour237'
set -w -g mode-style 'fg=colour233,bg=colour139'
